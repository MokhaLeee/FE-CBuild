#ifndef SAVE_DATA_INSTALLED
#define SAVE_DATA_INSTALLED

/*
    Mokha's plan:
    SAVE NAME       SAVE OFFSET     SAVE LENGTH
    meta            0x00            0xD4
    suspend         0xD4            0x2CD0
    save1           0x2DA4          0x1AC0
    save2           0x4864          0x1AC0
    save3           0x6324          0x1AC0
    magic           0x7DE4          0x08
    link_arena      ------          0x0
    extra_map       ------          0x0
*/

#include "SaveDataInternal.event"

ALIGN 4
gEmsOffsets:
    SHORT 0x2DA4 /* SAVE_ID_GAME0 */
    SHORT 0x4864 /* SAVE_ID_GAME1 */
    SHORT 0x6324 /* SAVE_ID_GAME2 */
    SHORT 0x00D4 /* SAVE_ID_SUSPEND */
    SHORT 0x00D4 /* SAVE_ID_SUSPEND_ALT */
    SHORT 0x0000 /* SAVE_ID_ARENA */
    SHORT 0x0000 /* SAVE_ID_XMAP */

gSkillSysMagicOffset:
    SHORT 0x7DE4

gEmsSizes:
    SHORT 0x1AC0 /* SAV */
    SHORT 0x2CD0 /* SUS */

#define EmsChunk(offset, size, save, load) "SHORT (offset) (size); POIN (save) (load)"
#define EmsChunkEnd "SHORT 0xFFFF 0 0 0 0 0"

ALIGN 4
gEmsSavChunks:
    EmsChunk($0000, $004C, MSA_SavePlaySt,   MSA_LoadPlaySt)
    EmsChunk($004C, $00B0, $0A31E4+1,          $0A326C+1)           /* Supply */
    EmsChunk($00FC, $0019, $0A3150+1,          $0A3198+1)           /* Permanent flags */
    EmsChunk($0118, $0460, $0A4264+1,          $0A421C+1)           /* BWL */
    EmsChunk($0578, $00C0, $0a4248+1,          $0a4288+1)           /* Chapter states */
    EmsChunk($0638, $0004, MSA_SaveBonusClaim, MSA_LoadBonusClaim)  /* Bonus claim */
    EmsChunk($063C, $0021, MSA_SaveWorldMap,   MSA_LoadWorldMap)    /* World map */
    EmsChunk($0660, $0018, MSA_SaveDungeon,    MSA_LoadDungeon)     /* Dungeon */
    EmsChunk($0678, $0008, $0A59E0+1,          $0A5A00+1)           /* Skirmish RN state */

    /* 51 * 0x2C */
    EmsChunk($0680, $08C4, MSA_SaveUnits, MSA_LoadUnits)

    /* 51 * 0x20 */
    EmsChunk($0F44, $0660, SaveUnitLearnedSkillLists, LoadUnitLearnedSkillLists)

    /* Free: $15A4 ~ $1AC0 */
    EmsChunkEnd

gEmsSusChunks:
    EmsChunk($0000, $004C, MSU_SavePlaySt,     MSU_LoadPlaySt)
    EmsChunk($004C, $0038, MSU_SaveAction,     MSU_LoadAction)
    EmsChunk($0084, $0019, $0A3150+1,          $0A3198+1)           /* Permanent flags */
    EmsChunk($009D, $0005, $0A3130+1,          $0A3170+1)           /* Chapter flags */
    EmsChunk($00A4, $00B0, $0A31E4+1,          $0A326C+1)           /* Supply */
    EmsChunk($0154, $0460, $0A4264+1,          $0A421C+1)           /* BWL */
    EmsChunk($05B4, $00C0, $0a4248+1,          $0a4288+1)           /* Chapter states */
    EmsChunk($0674, $0200, $0A6370+1,          $0A638C+1)           /* Traps */
    EmsChunk($0874, $0010, MSU_SaveMenuMask,   MSU_LoadMenuMask)    /* BM menu mask */
    EmsChunk($0884, $0021, MSU_SaveWorldMap,   MSU_LoadWorldMap)    /* World map */
    EmsChunk($08A8, $0018, MSU_SaveDungeon,    MSU_LoadDungeon)     /* Dungeon */
    EmsChunk($08C0, $000C, MSU_SaveDungeon2,   MSU_LoadDungeon2)    /* Dungeon state */
    EmsChunk($08CC, $0004, MSU_SaveEvtCounter, MSU_LoadEvtCounter)  /* Event slot counter */
    EmsChunk($08D0, $0000, MSU_SaveBonusClaim, MSU_LoadBonusClaimWIP)

    EmsChunk($08D0, 51 * 0x34, MSU_SaveBlueUnits,  MSU_LoadBlueUnits)
    EmsChunk($132C, 51 * 0x34, MSU_SaveRedUnits,   MSU_LoadRedUnits)
    EmsChunk($1D88, 8  * 0x34, MSU_SaveGreenUnits, MSU_LoadGreenUnits)

    /* 51 * 0x20 */
    EmsChunk($1F28, $0660, SaveUnitLearnedSkillLists, LoadUnitLearnedSkillLists)
    EmsChunk($2588, 0x20, SaveCombatArtStatus, LoadCombatArtStatus)
    EmsChunk($25A8, 0x08, SaveRandC, LoadRandC)

    /* Free: $25B0 ~ $2CD0 */
    EmsChunkEnd

#endif
