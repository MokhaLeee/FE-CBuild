# TPC CHANGELOG:
# W.I.P.

# 1.0:
# - Initial Release

import os, sys

INPUT_ENCODING = "utf-8"
OUTPUT_ENCODING = "utf-8"

def Parse(line):

	res = line.strip('\n')
	res = bytes(res,OUTPUT_ENCODING)
	res = res.replace(b'[X]',	b'\x00')
	res = res.replace(b'[N]',	b'\x01')
	res = res.replace(b'[NL]',	b'\x01')
	res = res.replace(b'[2NL]',	b'\x02')
	res = res.replace(b'[A]',	b'\x03')
	res = res.replace(b'[....]',	b'\x04')
	res = res.replace(b'[.....]',	b'\x05')
	res = res.replace(b'[......]',	b'\x06')
	res = res.replace(b'[.......]',	b'\x07')
	res = res.replace(b'[FarLeft]',	b'\x08')
	res = res.replace(b'[OpenFarLeft]',	b'\x08')
	res = res.replace(b'[MidLeft]',	b'\x09')
	res = res.replace(b'[OpenMidLeft]',	b'\x09')
	res = res.replace(b'[OpenLeft]',	b'\x0A')
	res = res.replace(b'[Right]',	b'\x0B')
	res = res.replace(b'[OpenRight]',	b'\x0B')
	res = res.replace(b'[OpenMidRight]',	b'\x0C')
	res = res.replace(b'[OpenFarRight]',	b'\x0D')
	res = res.replace(b'[OpenFarFarLeft]',	b'\x0E')
	res = res.replace(b'[OpenFarFarRight]',	b'\x0F')

	res = res.replace(b'[LoadFace]', b'\x10')
	res = res.replace(b'[ClearFace]', b'\x11')
	res = res.replace(b'[NormalPrint]', b'\x12')
	res = res.replace(b'[FastPrint]', b'\x13')
	res = res.replace(b'[CloseSpeechFast]', b'\x14')
	res = res.replace(b'[CloseSpeechSlow]', b'\x15')
	res = res.replace(b'[ToggleMouthMove]', b'\x16')
	res = res.replace(b'[ToggleSmile]', b'\x17')
	res = res.replace(b'[Yes]', b'\x18')
	res = res.replace(b'[No]', b'\x19')
	res = res.replace(b'[Buy/Sell]', b'\x1A')
	res = res.replace(b'[ShopContinue]', b'\x1B')
	res = res.replace(b'[SendToBack]', b'\x1C')
	res = res.replace(b'[FastPrint]', b'\x1D')
	res = res.replace(b'[.]', b'\x1F')

	res = res.replace(b'[LoadOverworldFaces]', b'\x04\x80')
	res = res.replace(b'[G]', b'\x05\x80')
	res = res.replace(b'[MoveFarLeft]', b'\x0A\x80')
	res = res.replace(b'[MoveMidLeft]', b'\x0B\x80')
	res = res.replace(b'[MoveLeft]', b'\x0C\x80')
	res = res.replace(b'[MoveRight]', b'\x0D\x80')
	res = res.replace(b'[MoveMidRight]', b'\x0E\x80')
	res = res.replace(b'[MoveFarRight]', b'\x0F\x80')

	res = res.replace(b'[MoveFarFarLeft]', b'\x10\x80')
	res = res.replace(b'[MoveFarFarRight]', b'\x11\x80')
	res = res.replace(b'[EnableBlinking]', b'\x16\x80')
	res = res.replace(b'[DelayBlinking]', b'\x18\x80')
	res = res.replace(b'[PauseBlinking]', b'\x19\x80')
	res = res.replace(b'[DisableBlinking]', b'\x1B\x80')
	res = res.replace(b'[OpenEyes]', b'\x1C\x80')
	res = res.replace(b'[CloseEyes]', b'\x1D\x80')
	res = res.replace(b'[HalfCloseEyes]', b'\x1E\x80')
	res = res.replace(b'[Wink]', b'\x1F\x80')

	res = res.replace(b'[Tact]', b'\x20\x80')
	res = res.replace(b'[ToggleRed]', b'\x21\x80')
	res = res.replace(b'[Item]', b'\x22\x80')
	res = res.replace(b'[SetName]', b'\x23\x80')
	res = res.replace(b'[ToggleColorInvert]', b'\x25\x80')

	res = res.replace(b'[0xFF]', b'\xFF\xFF')

	res = res.replace(b'[0x1]', b'\x01')
	res = res.replace(b'[0x01]', b'\x01')
	res = res.replace(b'[0x2]', b'\x02')
	res = res.replace(b'[0x02]', b'\x02')
	res = res.replace(b'[0x3]', b'\x03')
	res = res.replace(b'[0x03]', b'\x03')
	res = res.replace(b'[0x4]', b'\x04')
	res = res.replace(b'[0x04]', b'\x04')
	res = res.replace(b'[0x5]', b'\x05')
	res = res.replace(b'[0x05]', b'\x05')
	res = res.replace(b'[0x6]', b'\x06')
	res = res.replace(b'[0x06]', b'\x06')
	res = res.replace(b'[0x7]', b'\x07')
	res = res.replace(b'[0x07]', b'\x07')
	res = res.replace(b'[0x8]', b'\x08')
	res = res.replace(b'[0x08]', b'\x08')
	res = res.replace(b'[0x9]', b'\x09')
	res = res.replace(b'[0x09]', b'\x09')
	res = res.replace(b'[0xA]', b'\x0A')
	res = res.replace(b'[0x0A]', b'\x0A')
	res = res.replace(b'[0xB]', b'\x0B')
	res = res.replace(b'[0x0B]', b'\x0B')
	res = res.replace(b'[0xC]', b'\x0C')
	res = res.replace(b'[0x0C]', b'\x0C')
	res = res.replace(b'[0xD]', b'\x0D')
	res = res.replace(b'[0x0D]', b'\x0D')
	res = res.replace(b'[0xE]', b'\x0E')
	res = res.replace(b'[0x0E]', b'\x0E')
	res = res.replace(b'[0xF]', b'\x0F')
	res = res.replace(b'[0x0F]', b'\x0F')

	res = res.replace(b'[0x10]', b'\x10')
	res = res.replace(b'[0x11]', b'\x11')
	res = res.replace(b'[0x12]', b'\x12')
	res = res.replace(b'[0x13]', b'\x13')
	res = res.replace(b'[0x14]', b'\x14')
	res = res.replace(b'[0x15]', b'\x15')
	res = res.replace(b'[0x16]', b'\x16')
	res = res.replace(b'[0x17]', b'\x17')
	res = res.replace(b'[0x18]', b'\x18')
	res = res.replace(b'[0x19]', b'\x19')
	res = res.replace(b'[0x1A]', b'\x1A')
	res = res.replace(b'[0x1B]', b'\x1B')
	res = res.replace(b'[0x1C]', b'\x1C')
	res = res.replace(b'[0x1D]', b'\x1D')
	res = res.replace(b'[0x1E]', b'\x1E')
	res = res.replace(b'[0x1F]', b'\x1F')

	res = res.replace(b'[0x20]', b'\x20')
	res = res.replace(b'[0x21]', b'\x21')
	res = res.replace(b'[0x22]', b'\x22')
	res = res.replace(b'[0x23]', b'\x23')
	res = res.replace(b'[0x24]', b'\x24')
	res = res.replace(b'[0x25]', b'\x25')
	res = res.replace(b'[0x26]', b'\x26')
	res = res.replace(b'[0x27]', b'\x27')
	res = res.replace(b'[0x28]', b'\x28')
	res = res.replace(b'[0x29]', b'\x29')
	res = res.replace(b'[0x2A]', b'\x2A')
	res = res.replace(b'[0x2B]', b'\x2B')
	res = res.replace(b'[0x2C]', b'\x2C')
	res = res.replace(b'[0x2D]', b'\x2D')
	res = res.replace(b'[0x2E]', b'\x2E')
	res = res.replace(b'[0x2F]', b'\x2F')

	res = res.replace(b'[0x30]', b'\x30')
	res = res.replace(b'[0x31]', b'\x31')
	res = res.replace(b'[0x32]', b'\x32')
	res = res.replace(b'[0x33]', b'\x33')
	res = res.replace(b'[0x34]', b'\x34')
	res = res.replace(b'[0x35]', b'\x35')
	res = res.replace(b'[0x36]', b'\x36')
	res = res.replace(b'[0x37]', b'\x37')
	res = res.replace(b'[0x38]', b'\x38')
	res = res.replace(b'[0x39]', b'\x39')
	res = res.replace(b'[0x3A]', b'\x3A')
	res = res.replace(b'[0x3B]', b'\x3B')
	res = res.replace(b'[0x3C]', b'\x3C')
	res = res.replace(b'[0x3D]', b'\x3D')
	res = res.replace(b'[0x3E]', b'\x3E')
	res = res.replace(b'[0x3F]', b'\x3F')

	res = res.replace(b'[0x40]', b'\x40')
	res = res.replace(b'[0x41]', b'\x41')
	res = res.replace(b'[0x42]', b'\x42')
	res = res.replace(b'[0x43]', b'\x43')
	res = res.replace(b'[0x44]', b'\x44')
	res = res.replace(b'[0x45]', b'\x45')
	res = res.replace(b'[0x46]', b'\x46')
	res = res.replace(b'[0x47]', b'\x47')
	res = res.replace(b'[0x48]', b'\x48')
	res = res.replace(b'[0x49]', b'\x49')
	res = res.replace(b'[0x4A]', b'\x4A')
	res = res.replace(b'[0x4B]', b'\x4B')
	res = res.replace(b'[0x4C]', b'\x4C')
	res = res.replace(b'[0x4D]', b'\x4D')
	res = res.replace(b'[0x4E]', b'\x4E')
	res = res.replace(b'[0x4F]', b'\x4F')

	res = res.replace(b'[0x50]', b'\x50')
	res = res.replace(b'[0x51]', b'\x51')
	res = res.replace(b'[0x52]', b'\x52')
	res = res.replace(b'[0x53]', b'\x53')
	res = res.replace(b'[0x54]', b'\x54')
	res = res.replace(b'[0x55]', b'\x55')
	res = res.replace(b'[0x56]', b'\x56')
	res = res.replace(b'[0x57]', b'\x57')
	res = res.replace(b'[0x58]', b'\x58')
	res = res.replace(b'[0x59]', b'\x59')
	res = res.replace(b'[0x5A]', b'\x5A')
	res = res.replace(b'[0x5B]', b'\x5B')
	res = res.replace(b'[0x5C]', b'\x5C')
	res = res.replace(b'[0x5D]', b'\x5D')
	res = res.replace(b'[0x5E]', b'\x5E')
	res = res.replace(b'[0x5F]', b'\x5F')

	res = res.replace(b'[0x60]', b'\x60')
	res = res.replace(b'[0x61]', b'\x61')
	res = res.replace(b'[0x62]', b'\x62')
	res = res.replace(b'[0x63]', b'\x63')
	res = res.replace(b'[0x64]', b'\x64')
	res = res.replace(b'[0x65]', b'\x65')
	res = res.replace(b'[0x66]', b'\x66')
	res = res.replace(b'[0x67]', b'\x67')
	res = res.replace(b'[0x68]', b'\x68')
	res = res.replace(b'[0x69]', b'\x69')
	res = res.replace(b'[0x6A]', b'\x6A')
	res = res.replace(b'[0x6B]', b'\x6B')
	res = res.replace(b'[0x6C]', b'\x6C')
	res = res.replace(b'[0x6D]', b'\x6D')
	res = res.replace(b'[0x6E]', b'\x6E')
	res = res.replace(b'[0x6F]', b'\x6F')

	res = res.replace(b'[0x70]', b'\x70')
	res = res.replace(b'[0x71]', b'\x71')
	res = res.replace(b'[0x72]', b'\x72')
	res = res.replace(b'[0x73]', b'\x73')
	res = res.replace(b'[0x74]', b'\x74')
	res = res.replace(b'[0x75]', b'\x75')
	res = res.replace(b'[0x76]', b'\x76')
	res = res.replace(b'[0x77]', b'\x77')
	res = res.replace(b'[0x78]', b'\x78')
	res = res.replace(b'[0x79]', b'\x79')
	res = res.replace(b'[0x7A]', b'\x7A')
	res = res.replace(b'[0x7B]', b'\x7B')
	res = res.replace(b'[0x7C]', b'\x7C')
	res = res.replace(b'[0x7D]', b'\x7D')
	res = res.replace(b'[0x7E]', b'\x7E')
	res = res.replace(b'[0x7F]', b'\x7F')

	res = res.replace(b'[0x80]', b'\x80')
	res = res.replace(b'[0x81]', b'\x81')
	res = res.replace(b'[0x82]', b'\x82')
	res = res.replace(b'[0x83]', b'\x83')
	res = res.replace(b'[0x84]', b'\x84')
	res = res.replace(b'[0x85]', b'\x85')
	res = res.replace(b'[0x86]', b'\x86')
	res = res.replace(b'[0x87]', b'\x87')
	res = res.replace(b'[0x88]', b'\x88')
	res = res.replace(b'[0x89]', b'\x89')
	res = res.replace(b'[0x8A]', b'\x8A')
	res = res.replace(b'[0x8B]', b'\x8B')
	res = res.replace(b'[0x8C]', b'\x8C')
	res = res.replace(b'[0x8D]', b'\x8D')
	res = res.replace(b'[0x8E]', b'\x8E')
	res = res.replace(b'[0x8F]', b'\x8F')

	res = res.replace(b'[0x90]', b'\x90')
	res = res.replace(b'[0x91]', b'\x91')
	res = res.replace(b'[0x92]', b'\x92')
	res = res.replace(b'[0x93]', b'\x93')
	res = res.replace(b'[0x94]', b'\x94')
	res = res.replace(b'[0x95]', b'\x95')
	res = res.replace(b'[0x96]', b'\x96')
	res = res.replace(b'[0x97]', b'\x97')
	res = res.replace(b'[0x98]', b'\x98')
	res = res.replace(b'[0x99]', b'\x99')
	res = res.replace(b'[0x9A]', b'\x9A')
	res = res.replace(b'[0x9B]', b'\x9B')
	res = res.replace(b'[0x9C]', b'\x9C')
	res = res.replace(b'[0x9D]', b'\x9D')
	res = res.replace(b'[0x9E]', b'\x9E')
	res = res.replace(b'[0x9F]', b'\x9F')

	res = res.replace(b'[0xA0]', b'\xA0')
	res = res.replace(b'[0xA1]', b'\xA1')
	res = res.replace(b'[0xA2]', b'\xA2')
	res = res.replace(b'[0xA3]', b'\xA3')
	res = res.replace(b'[0xA4]', b'\xA4')
	res = res.replace(b'[0xA5]', b'\xA5')
	res = res.replace(b'[0xA6]', b'\xA6')
	res = res.replace(b'[0xA7]', b'\xA7')
	res = res.replace(b'[0xA8]', b'\xA8')
	res = res.replace(b'[0xA9]', b'\xA9')
	res = res.replace(b'[0xAA]', b'\xAA')
	res = res.replace(b'[0xAB]', b'\xAB')
	res = res.replace(b'[0xAC]', b'\xAC')
	res = res.replace(b'[0xAD]', b'\xAD')
	res = res.replace(b'[0xAE]', b'\xAE')
	res = res.replace(b'[0xAF]', b'\xAF')
	return res

def main():
	import argparse
	argParse = argparse.ArgumentParser()
	argParse.add_argument('-i','--input', help = 'input .fetext file generated by text-process')
	argParse.add_argument('-o','--output', help = 'output .dmp file to \"#incbin\" by Event-Assembler')

	arguments = argParse.parse_args(sys.argv[1:])

	input_file = arguments.input
	output_file = arguments.output

	if not os.path.exists(input_file):
		sys.exit("`{}` doesn't exist".format(input_file))

	with open(input_file, 'r', encoding = INPUT_ENCODING) as fi:
		with open(output_file, 'wb') as fo:

			for line in fi.readlines():
				fo.write( Parse(line) )

if __name__ == '__main__':
	main()
